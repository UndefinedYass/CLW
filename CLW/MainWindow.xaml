<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:VML="clr-namespace:CLW.VML"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CLW"
    xmlns:converters="clr-namespace:CLW.Converters"
        xmlns:Views="clr-namespace:CLW.Views"
        xmlns:tb="http://www.hardcodet.net/taskbar" 
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
         xmlns:controlzex="urn:controlzex" 
         xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls" 

        xmlns:Custom="http://metro.mahapps.com/winfx/xaml/iconpacks" 
        xmlns:ViewModel="clr-namespace:CLW.ViewModel" 
        x:Class="CLW.MainWindow" 
        mc:Ignorable="d"
        x:Name="MainWindowInstance"
        VML:ViewModelLocator.AutoHookedViewModel="True"
        Title="MainWindow" Height="508" Width="815" WindowStyle="None" 
        ResizeMode="CanResizeWithGrip" WindowStartupLocation="CenterScreen" 
    AllowsTransparency="True"
        TextOptions.TextFormattingMode="Display" SnapsToDevicePixels="True" 
        UseLayoutRounding="True" Icon="media/tempEyeIcon/red-eye-transp.ico" 
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextRenderingMode="Auto"        
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}"  KeyDown="Window_KeyDown"
    


    >
    <Window.Resources>
        <local:NoNewsCardVisibilityCalculator x:Key="NoNewsCardVisibilityCalculator"/>
        <local:NewsErrorCardVisibilityCalculator x:Key="NewsErrorCardVisibilityCalculator"/>
        <local:visibleIfNonEmptyText x:Key="visibleIfNonEmptyText"/>
        <materialDesign:TextFieldHintVisibilityConverter x:Key="TextFieldHintVisibilityConverter"/>
        <local:visibleWhenGreaterThanConverter x:Key="visibleWhenGreaterThanConverter"/>
        <local:visibleWhenZeroConverter x:Key="visibleWhenZeroConverter"/>
        <local:boolToVisibilityInverted x:Key="boolToVisibilityInverted1"/>
        <materialDesign:EqualityToVisibilityConverter x:Key="EqualityToVisibilityConverter"/>
        <materialDesign:NotZeroToVisibilityConverter x:Key="NotZeroToVisibilityConverter"/>
        <converters:IntToVisibilityConverter x:Key="IntToVisibilityConverter"/>
        <local:boolToVisibilityInverted x:Key="boolToVisibilityInverted"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <Storyboard x:Key="OnMouseEnter1"/>
        <Storyboard x:Key="OnMouseLeave1"/>
        <Storyboard x:Key="OnMouseEnter2"/>
        <Storyboard x:Key="OnMouseLeave2"/>
        <ControlTemplate x:Key="IconButtonMiControlTemplate1" TargetType="{x:Type local:IconButtonMi}">
            <ControlTemplate.Resources>
                <Storyboard x:Key="Storyboard1">
                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
                        <EasingColorKeyFrame KeyTime="0" Value="#FF007ACC"/>
                    </ColorAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="contentPresenter">
                        <EasingDoubleKeyFrame KeyTime="0" Value="20"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="contentPresenter">
                        <EasingDoubleKeyFrame KeyTime="0" Value="20"/>
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
                <Storyboard x:Key="Storyboard2">
                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
                        <EasingColorKeyFrame KeyTime="0:0:0.2" Value="#FF161616"/>
                    </ColorAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="contentPresenter">
                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="18"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="contentPresenter">
                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="18"/>
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
                <Storyboard x:Key="gotPressed"/>
                <Storyboard x:Key="gotUnpressed"/>
            </ControlTemplate.Resources>
            <Border x:Name="grid" Background="#FF161616" CornerRadius="48" BorderBrush="#00898989" BorderThickness="1" UseLayoutRounding="True">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver"/>
                        <VisualState x:Name="Pressed">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF0863A0"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled"/>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <ContentPresenter x:Name="contentPresenter" Margin="0" Width="18" Height="18" HorizontalAlignment="Center" VerticalAlignment="Center" UseLayoutRounding="False"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsPressed" Value="True">
                    <Trigger.ExitActions>
                        <BeginStoryboard x:Name="gotUnpressed_BeginStoryboard" Storyboard="{StaticResource gotUnpressed}"/>
                    </Trigger.ExitActions>
                    <Trigger.EnterActions>
                        <BeginStoryboard x:Name="gotPressed_BeginStoryboard" Storyboard="{StaticResource gotPressed}"/>
                    </Trigger.EnterActions>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.ExitActions>
                        <BeginStoryboard x:Name="Storyboard2_BeginStoryboard" Storyboard="{StaticResource Storyboard2}"/>
                    </Trigger.ExitActions>
                    <Trigger.EnterActions>
                        <BeginStoryboard Storyboard="{StaticResource Storyboard1}"/>
                    </Trigger.EnterActions>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="IconButtonMi_hoverIcon_big_blue" TargetType="{x:Type local:IconButtonMi}">
            <ControlTemplate.Resources>
                <Storyboard x:Key="Storyboard1">
                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
                        <EasingColorKeyFrame KeyTime="0" Value="#FF007ACC"/>
                    </ColorAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="contentPresenter">
                        <EasingDoubleKeyFrame KeyTime="0" Value="20"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="contentPresenter">
                        <EasingDoubleKeyFrame KeyTime="0" Value="20"/>
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
                <Storyboard x:Key="Storyboard2">
                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
                        <EasingColorKeyFrame KeyTime="0:0:0.2" Value="#FF161616"/>
                    </ColorAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="contentPresenter">
                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="18"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="contentPresenter">
                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="18"/>
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
                <Storyboard x:Key="gotPressed"/>
                <Storyboard x:Key="gotUnpressed"/>
            </ControlTemplate.Resources>
            <Border x:Name="grid" Background="#FF161616" CornerRadius="48" BorderBrush="#00898989" BorderThickness="1" UseLayoutRounding="True" Width="48" Height="48">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver"/>
                        <VisualState x:Name="Pressed">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF0863A0"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled"/>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <ContentPresenter x:Name="contentPresenter" Margin="0" Width="18" Height="18" HorizontalAlignment="Center" VerticalAlignment="Center" UseLayoutRounding="False"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsPressed" Value="True">
                    <Trigger.ExitActions>
                        <BeginStoryboard x:Name="gotUnpressed_BeginStoryboard" Storyboard="{StaticResource gotUnpressed}"/>
                    </Trigger.ExitActions>
                    <Trigger.EnterActions>
                        <BeginStoryboard x:Name="gotPressed_BeginStoryboard" Storyboard="{StaticResource gotPressed}"/>
                    </Trigger.EnterActions>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.ExitActions>
                        <BeginStoryboard x:Name="Storyboard2_BeginStoryboard" Storyboard="{StaticResource Storyboard2}"/>
                    </Trigger.ExitActions>
                    <Trigger.EnterActions>
                        <BeginStoryboard Storyboard="{StaticResource Storyboard1}"/>
                    </Trigger.EnterActions>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="IconButtonMi_iconHover_small_blue" TargetType="{x:Type local:IconButtonMi}">
            <ControlTemplate.Resources>
                <Storyboard x:Key="Storyboard1">
                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
                        <EasingColorKeyFrame KeyTime="0" Value="#FF007ACC"/>
                    </ColorAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="contentPresenter">
                        <EasingDoubleKeyFrame KeyTime="0" Value="18"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="contentPresenter">
                        <EasingDoubleKeyFrame KeyTime="0" Value="18"/>
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
                <Storyboard x:Key="Storyboard2">
                    <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
                        <EasingColorKeyFrame KeyTime="0:0:0.2" Value="#FF161616"/>
                    </ColorAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="contentPresenter">
                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="16"/>
                    </DoubleAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="contentPresenter">
                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="16"/>
                    </DoubleAnimationUsingKeyFrames>
                </Storyboard>
                <Storyboard x:Key="gotPressed"/>
                <Storyboard x:Key="gotUnpressed"/>
            </ControlTemplate.Resources>
            <Border x:Name="grid" Background="#FF161616" CornerRadius="48" BorderBrush="#00898989" BorderThickness="1" UseLayoutRounding="True" Width="30" Height="30">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver"/>
                        <VisualState x:Name="Pressed">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF0863A0"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled"/>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <ContentPresenter x:Name="contentPresenter" Margin="0" Width="16" Height="16" HorizontalAlignment="Center" VerticalAlignment="Center" UseLayoutRounding="False"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsPressed" Value="True">
                    <Trigger.ExitActions>
                        <BeginStoryboard x:Name="gotUnpressed_BeginStoryboard" Storyboard="{StaticResource gotUnpressed}"/>
                    </Trigger.ExitActions>
                    <Trigger.EnterActions>
                        <BeginStoryboard x:Name="gotPressed_BeginStoryboard" Storyboard="{StaticResource gotPressed}"/>
                    </Trigger.EnterActions>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.ExitActions>
                        <BeginStoryboard x:Name="Storyboard2_BeginStoryboard" Storyboard="{StaticResource Storyboard2}"/>
                    </Trigger.ExitActions>
                    <Trigger.EnterActions>
                        <BeginStoryboard Storyboard="{StaticResource Storyboard1}"/>
                    </Trigger.EnterActions>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Storyboard x:Key="OnMouseLeftButtonDown1"/>
        <Storyboard x:Key="miToggleTry1"/>
        <Storyboard x:Key="miToggleReverseTry1"/>
        <Storyboard x:Key="miOff"/>
        <Storyboard x:Key="miOn"/>
        <ControlTemplate x:Key="ToggleButtonControlTemplate1" TargetType="{x:Type ToggleButton}">
            <Grid x:Name="miToggle" HorizontalAlignment="Center" Margin="0" Width="24" Background="#00000000" Height="16" VerticalAlignment="Center" d:LayoutOverrides="LeftPosition, RightPosition, TopPosition, BottomPosition">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CheckStates">
                        <VisualStateGroup.Transitions>
                            <VisualTransition From="Unchecked" GeneratedDuration="0" To="Checked">
                                <Storyboard>
                                    <DoubleAnimation Duration="0:0:0.2" To="8" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="thumb"/>
                                    <ColorAnimation Duration="0:0:0.2" To="#FF35CB8E" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="thumb"/>
                                    <ColorAnimation Duration="0:0:0.2" To="#FF447460" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="tracker"/>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="thumb">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.9"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="thumb">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.9"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualTransition>
                            <VisualTransition From="Checked" GeneratedDuration="0" To="Unchecked">
                                <Storyboard>
                                    <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="thumb"/>
                                    <ColorAnimation Duration="0:0:0.2" To="#FFD1D1D1" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="thumb"/>
                                    <ColorAnimation Duration="0:0:0.2" To="#FF767676" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="tracker"/>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="thumb">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.9"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="thumb">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.9"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualTransition>
                        </VisualStateGroup.Transitions>
                        <VisualState x:Name="Checked">
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="thumb">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="8"/>
                                </DoubleAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="thumb">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF35CB8E"/>
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="tracker">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF447460"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unchecked"/>
                        <VisualState x:Name="Indeterminate">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="thumb">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF35CB8E"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Grid Height="16" Margin="0" VerticalAlignment="Top" Width="24">
                    <Rectangle x:Name="tracker" Margin="0,3,0,0" Stroke="{x:Null}" RadiusY="5" RadiusX="5" StrokeThickness="1" Height="10" VerticalAlignment="Top" Fill="#FF767676" HorizontalAlignment="Stretch" Width="24"/>
                    <Ellipse x:Name="thumb" Height="16" Margin="0" Stroke="{x:Null}" StrokeThickness="0" VerticalAlignment="Center" Width="16" HorizontalAlignment="Left" Fill="#FFD1D1D1" RenderTransformOrigin="0.5,0.5">
                        <Ellipse.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <SkewTransform/>
                                <RotateTransform/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Ellipse.RenderTransform>
                    </Ellipse>
                </Grid>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True"/>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="HIconButtonControlTemplate1" TargetType="{x:Type local:HIconButton}">
            <Grid Background="#00000000">
                <ContentPresenter Margin="0"/>
            </Grid>
        </ControlTemplate>
        <DataTemplate x:Key="DataTemplate1">
            <Grid>
                <!--local:WatcherUC/-->
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="DataTemplate2" DataType="local:CustomLW">
            <Grid Height="58" Width="Auto">
                <!--local:WatcherUC Title="{Binding Name}"  StateText="{Binding StatusMessage}" NewsCount="{Binding UnreadCount}"  Margin="0" Padding="0" ScrollViewer.VerticalScrollBarVisibility="Auto" Width="Auto" Foreground="#FFD4D4D4"  Favico="{Binding IconSource}" CoreCustomListWatcher="{Binding Mode=OneWay}" Background="#00000000"  /-->
            </Grid>
        </DataTemplate>
        <Style x:Key="ListBoxItemStyle1" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="0,0,0,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true" Background="{DynamicResource MaterialDesignPaper}" Margin="0" BorderThickness="0,0,0,0" BorderBrush="{DynamicResource MaterialDesignDivider}">
                            <Grid>
                                <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                                <Grid Background="{DynamicResource MaterialDesignDivider}"  Height="1" VerticalAlignment="Bottom" ></Grid>
                            </Grid>

                        </Border>
                        <!--ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource MaterialDesignTextFieldBoxHoverBackground}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="Selector.IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource MaterialDesignTextFieldBoxHoverBackground}"/>

                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                <Setter Property="Opacity" TargetName="Bd" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers-->
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ItemsPanelTemplate x:Key="ItemsPanelTemplate1">
            <VirtualizingStackPanel IsVirtualizing="True"  IsItemsHost="True"/>
        </ItemsPanelTemplate>
        <Style x:Key="ControlStyle1" TargetType="{x:Type Control}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Control}">
                        <Grid Background="#FF74FF00"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <DataTemplate x:Key="Collection1ItemTemplate">
            <Grid >
                <Views:NewItemView   d:LayoutOverrides="Width, Height"  Foreground="White"/>
            </Grid>
        </DataTemplate>
        <Style x:Key="newsListTemplate" TargetType="{x:Type ListBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ListBorder}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="1" SnapsToDevicePixels="true">
                            <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}" Style="{DynamicResource simpleScrollerMiEdited}" PanningMode="Both">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsGrouping" Value="true"/>
                                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ButtonStyle1showArchived" TargetType="{x:Type Button}" BasedOn="{x:Null}">
            <Setter Property="FocusVisualStyle" Value="{DynamicResource SimpleButtonFocusVisual}"/>
            <Setter Property="Background" Value="{DynamicResource NormalBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">

                        <!-- We use Grid as a root because it is easy to add more elements to customize the button -->
                        <Grid x:Name="Grid">
                            <Border x:Name="Border" Background="#00E22866" Padding="{TemplateBinding Padding}" CornerRadius="2" BorderBrush="{DynamicResource DisabledForegroundBrush}" BorderThickness="1"/>

                            <!-- Content Presenter is where the text content etc is placed by the control -->
                            <!-- The bindings are useful so that the control can be parameterized without editing the template -->
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
                        </Grid>

                        <!--Each state sets a brush on the Border in the template -->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsKeyboardFocused" Value="true"/>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource DisabledBorderBrush}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource DisabledBackgroundBrush}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="true"/>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
                                <Setter Property="Opacity" TargetName="Border" Value="0.4"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollViewerStyle1" TargetType="{x:Type ScrollViewer}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Rectangle x:Name="PART_Corner" Grid.Column="1" Fill="{DynamicResource MaterialDesignSelection}" Grid.Row="1" Visibility="{Binding (materialDesign:ScrollViewerAssist.CornerRectangleVisibility), RelativeSource={RelativeSource TemplatedParent}}"/>
                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Grid.Row="0"/>
                            <Separator x:Name="PART_TopSeparator" Background="{DynamicResource MaterialDesignSelection}" Grid.Column="0" Margin="0" Opacity="0.4" Grid.Row="0" Visibility="Visible" VerticalAlignment="Top"/>
                            <Separator x:Name="PART_BottomSeparator" Background="{DynamicResource MaterialDesignSelection}" Grid.Column="0" Margin="0" Opacity="0.4" Grid.Row="0" Visibility="Hidden" VerticalAlignment="Bottom"/>
                            <ScrollBar Style="{DynamicResource MaterialDesignScrollBarMinimal}" x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
                            <ScrollBar  x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="materialDesign:ScrollViewerAssist.ShowSeparators" Value="True"/>
                                    <Condition Property="ComputedVerticalScrollBarVisibility" Value="Visible"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Visibility" TargetName="PART_BottomSeparator" Value="Visible"/>
                            </MultiTrigger>
                            <Trigger Property="VerticalOffset" Value="0">
                                <Setter Property="Visibility" TargetName="PART_TopSeparator" Value="Hidden"/>
                            </Trigger>
                            <Trigger Property="materialDesign:ScrollViewerAssist.ShowSeparators" Value="False">
                                <Setter Property="Visibility" TargetName="PART_TopSeparator" Value="Hidden"/>
                            </Trigger>
                            <Trigger Property="materialDesign:ScrollViewerAssist.IgnorePadding" Value="False">
                                <Setter Property="Margin" TargetName="PART_ScrollContentPresenter" Value="{Binding Padding, RelativeSource={RelativeSource TemplatedParent}}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="materialDesign:ScrollViewerAssist.IsAutoHideEnabled" Value="True"/>
                                    <Condition Property="ComputedVerticalScrollBarVisibility" Value="Visible"/>
                                    <Condition Property="IsMouseOver" Value="False"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_VerticalScrollBar"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_VerticalScrollBar"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="materialDesign:ScrollViewerAssist.IsAutoHideEnabled" Value="True"/>
                                    <Condition Property="ComputedHorizontalScrollBarVisibility" Value="Visible"/>
                                    <Condition Property="IsMouseOver" Value="False"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_HorizontalScrollBar"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_HorizontalScrollBar"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Storyboard x:Key="AddWatcherFButt_ShowUp">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="AddWatcherFButt">
                <EasingDoubleKeyFrame KeyTime="0" Value="0.1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.16" Value="1"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="AddWatcherFButt">
                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                <DiscreteObjectKeyFrame KeyTime="0:0:0.16" Value="{x:Static Visibility.Visible}"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="AddWatcherFButt_Hide">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="AddWatcherFButt">
                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="AddWatcherFButt">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.2" Value="{x:Static Visibility.Hidden}"/>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="SearchBoxStrech">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="textBox">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="120"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="SearchBoxShrinkBack">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="textBox">
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="80"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </Window.Resources>
    <Window.Triggers>
        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
            <BeginStoryboard x:Name="miOff_BeginStoryboard" Storyboard="{StaticResource miOff}"/>
            <BeginStoryboard x:Name="miOn_BeginStoryboard" Storyboard="{StaticResource miOn}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="UIElement.MouseEnter" SourceName="watcher_win">
            <BeginStoryboard x:Name="AddWatcherFButt_ShowUp_BeginStoryboard1" Storyboard="{StaticResource AddWatcherFButt_ShowUp}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="UIElement.MouseLeave" SourceName="watcher_win">
            <BeginStoryboard x:Name="AddWatcherFButt_Hide_BeginStoryboard1" Storyboard="{StaticResource AddWatcherFButt_Hide}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="UIElement.GotFocus" SourceName="textBox">
            <BeginStoryboard x:Name="SearchBoxStrech_BeginStoryboard" Storyboard="{StaticResource SearchBoxStrech}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="UIElement.LostFocus" SourceName="textBox">
            <BeginStoryboard x:Name="SearchBoxShrinkBack_BeginStoryboard1" Storyboard="{StaticResource SearchBoxShrinkBack}"/>
        </EventTrigger>
    </Window.Triggers>
    <Border BorderBrush="#FF161616" BorderThickness="1,0,1,1">

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="38"/>
            </Grid.RowDefinitions>

            <Grid Background="{DynamicResource MaterialDesignPaper}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="278*"/>
                    <ColumnDefinition Width="527*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="30"/>
                    <RowDefinition Height="54"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <Grid x:Name="DragArea2" Margin="0" Background="#002A87B2" Grid.ColumnSpan="2" PreviewMouseLeftButtonDown="DragArea_PreviewMouseLeftButtonDown" Grid.Row="1"/>

                <Grid x:Name="window_Header" Margin="0" Background="#00686868" Grid.ColumnSpan="2" d:LayoutOverrides="LeftMargin, RightMargin, TopMargin, BottomMargin" Height="30" MouseLeftButtonDown="window_Header_MouseLeftButtonDown">
                    <Grid x:Name="windowControls" HorizontalAlignment="Right" Margin="0" Width="84" Background="#00F56B6B" Height="30" VerticalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="28"/>
                            <ColumnDefinition Width="28"/>
                            <ColumnDefinition Width="28"/>
                        </Grid.ColumnDefinitions>
                        <Grid x:Name="close" Background="#00FBCDCD" Height="24" VerticalAlignment="Center" Grid.Column="2" Margin="0" Width="24" HorizontalAlignment="Center">
                            <local:HIconButton x:Name="CloseWindowHIButt" Margin="0" Template="{DynamicResource HIconButtonControlTemplate1}" HoverColor="CornflowerBlue" Foreground="{DynamicResource MaterialDesignBody}" Click="CloseWindowHIButt_Click">
                                <Custom:PackIconBootstrapIcons HorizontalAlignment="Center" Height="16" Margin="0" VerticalAlignment="Center" Width="16" Foreground="#FFECECEC" Kind="X"/>
                            </local:HIconButton>
                        </Grid>
                        <Grid x:Name="max" Margin="0" Background="#00FBCDCD" Height="24" VerticalAlignment="Center" Grid.Column="1" HorizontalAlignment="Center" Width="24">
                            <Image x:Name="image4" Margin="0" Source="media/from fbhd/maximize-24-white-diminished.png" Visibility="Hidden"/>
                            <Custom:PackIconFontAwesome Height="16" Margin="0" VerticalAlignment="Center" Width="16" Foreground="#FFECECEC" Kind="WindowMaximizeRegular" HorizontalAlignment="Center" Visibility="Hidden"/>
                            <local:HIconButton x:Name="maximizeHIButt_Copy" Margin="0" Template="{DynamicResource HIconButtonControlTemplate1}" HoverColor="CornflowerBlue" Foreground="{DynamicResource MaterialDesignBody}" Click="maximizeHIButt_Copy_Click">
                                <Custom:PackIconFontAwesome Height="16" Margin="0" VerticalAlignment="Center" Width="16" Foreground="#FFECECEC" Kind="WindowMaximizeRegular" HorizontalAlignment="Center" d:LayoutOverrides="LeftPosition, RightPosition, TopPosition, BottomPosition"/>
                            </local:HIconButton>
                        </Grid>
                        <Grid x:Name="minimize" Background="#00FBCDCD" Height="24" VerticalAlignment="Center" Margin="0" Width="24" HorizontalAlignment="Center">
                            <Image x:Name="image3" Margin="0" Source="media/minimize-24px-white.svg.png" Visibility="Hidden"/>
                            <Custom:PackIconFontAwesome Height="Auto" Margin="4,0,4,6" VerticalAlignment="Bottom" Width="16" Foreground="#FFECECEC" Kind="WindowMinimizeRegular" HorizontalAlignment="Center" Visibility="Hidden"/>
                            <local:HIconButton x:Name="minimizeHIBUTT" Margin="0" Template="{DynamicResource HIconButtonControlTemplate1}" HoverColor="CornflowerBlue" Foreground="{DynamicResource MaterialDesignBody}" Click="minimizeHIBUTT_Click">
                                <Custom:PackIconFontAwesome Height="Auto" Margin="4,0,4,6" VerticalAlignment="Bottom" Width="16" Foreground="#FFECECEC" Kind="WindowMinimizeRegular" HorizontalAlignment="Center" d:LayoutOverrides="LeftPosition, RightPosition, TopPosition, BottomPosition"/>
                            </local:HIconButton>
                        </Grid>
                    </Grid>
                    <Grid x:Name="secondaryControls" HorizontalAlignment="Left" Margin="0" Width="48" Height="30" VerticalAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="24"/>
                            <ColumnDefinition Width="24"/>
                        </Grid.ColumnDefinitions>
                        <Grid x:Name="settings" Background="#00FBCDCD" RenderTransformOrigin="0.542,0.375" VerticalAlignment="Center" d:LayoutOverrides="TopMargin, BottomMargin" Grid.Column="1" HorizontalAlignment="Center" Width="18" Height="18" Visibility="Collapsed">
                            <Image x:Name="image1" Margin="0" Source="media/notifications-off-24px-white-outlined.svg.png" Width="24" Height="24" Stretch="Fill" Visibility="Collapsed"/>
                            <Custom:PackIconMaterial HorizontalAlignment="Center" Height="18" Margin="0" VerticalAlignment="Center" Width="18" Kind="BellCheck" Foreground="{DynamicResource MaterialDesignBody}"/>
                        </Grid>
                        <Grid x:Name="mute" Background="#00FBCDCD" RenderTransformOrigin="0.542,0.375" VerticalAlignment="Center" Margin="0" HorizontalAlignment="Center" Width="18" Height="18">
                            <Button materialDesign:ButtonAssist.CornerRadius="0" Command="{Binding OpenSettingsCommand}"
    							Style="{StaticResource MaterialDesignIconForegroundButton}"
    							ToolTip="MaterialDesignIconForegroundButton" Width="18" Height="18">
                                <Custom:PackIconFontAwesome
    								Kind="CogSolid" Width="16" Height="16" />
                            </Button>
                        </Grid>
                    </Grid>
                </Grid>
                <Grid x:Name="Header" Grid.ColumnSpan="2" Margin="0" Grid.Row="1">
                    <Grid x:Name="Logo" Margin="0,1,0,0" HorizontalAlignment="Left" Width="157">
                        <Border x:Name="small_info" Margin="0,0,0,25" Background="#FFE64646" CornerRadius="50" Height="28" Width="28" HorizontalAlignment="Right" d:LayoutOverrides="Width" Visibility="Collapsed">
                            <TextBlock x:Name="textBlock_Copy" TextWrapping="Wrap" Text="12" FontSize="18.667" TextOptions.TextFormattingMode="Display" VerticalAlignment="Center" HorizontalAlignment="Center" FontFamily="Tw Cen MT Condensed Extra Bold" Margin="0" Foreground="White"/>
                        </Border>
                        <Grid x:Name="logo" Margin="0,1,5,0" Background="#00CDCDCD">
                            <TextBlock x:Name="textBlock" Margin="44,0,0,0" TextWrapping="Wrap" Text="CLW" FontSize="29.333" TextOptions.TextFormattingMode="Ideal" VerticalAlignment="Center" FontFamily="Tw Cen MT Condensed Extra Bold" Foreground="{DynamicResource MaterialDesignBody}" HorizontalAlignment="Left" UseLayoutRounding="True" SnapsToDevicePixels="True"/>
                            <Custom:PackIconCodicons x:Name="interfaceIcon" Height="38" Margin="62.5,7,51.5,7" VerticalAlignment="Stretch" Width="Auto" Foreground="{DynamicResource MaterialDesignBody}" Kind="SymbolInterface"  RenderTransformOrigin="5,4" HorizontalAlignment="Stretch" Visibility="Collapsed"/>
                            <Image x:Name="image10" Source="media/tempEyeIcon/pink-white-simpleEys-trasp-opac-center-h30-pp.png" Margin="10,0,0,0" Height="30" VerticalAlignment="Center" HorizontalAlignment="Left" UseLayoutRounding="True"/>
                        </Grid>
                    </Grid>
                    <Border x:Name="noticce" Margin="332,0,307,7" Background="#00000000" BorderThickness="1" BorderBrush="#00F7DA65" HorizontalAlignment="Center" VerticalAlignment="Center" CornerRadius="18" Padding="6,0" Visibility="Collapsed">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="16"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock x:Name="textBlock10" TextWrapping="Wrap" Text="No Internet Connection! " TextOptions.TextFormattingMode="Display" VerticalAlignment="Center" Foreground="#FFF7CF2C" Margin="6,10,2,10" Grid.Column="1"/>
                            <Custom:PackIconModern HorizontalAlignment="Center" Height="16" Margin="0" VerticalAlignment="Center" Width="16" Foreground="#FFFFD83B" Kind="WarningCircle"/>
                        </Grid>
                    </Border>
                    <Border x:Name="primaryButton_Copy1" Margin="0,8,154,8" Background="{DynamicResource FocalPink}" HorizontalAlignment="Right" BorderBrush="#00890B0B" BorderThickness="1" CornerRadius="5" d:LayoutOverrides="Height" Visibility="Hidden">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="30"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock x:Name="textBlock12" TextWrapping="Wrap" Text="Add Watcher" Foreground="White" FontSize="16" HorizontalAlignment="Center" VerticalAlignment="Center" FontWeight="Bold" Margin="6,8" Grid.Column="1"/>
                            <Custom:PackIconBootstrapIcons Height="22" VerticalAlignment="Center" Width="22" Foreground="#FFFFFBFB" Kind="PlusCircleFill" Margin="0" HorizontalAlignment="Right"/>
                        </Grid>
                    </Border>
                    <Button x:Name="AddWatcherButton" Command="{Binding LoadWatcherFromFileCommand}"  HorizontalAlignment="Right" Margin="0,0,10,0"   Height="Auto"
    					Style="{StaticResource MaterialDesignOutlinedLightButton}" ToolTip="Add New Watcher" Padding="8,6" VerticalAlignment="Center">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="28"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock x:Name="textBlock7" TextWrapping="Wrap" Text="Add Watcher"  HorizontalAlignment="Center" VerticalAlignment="Center"  Margin="6,0,4,0" Grid.Column="1" FontWeight="Bold" FontSize="13" />
                            <Custom:PackIconBootstrapIcons Height="20" VerticalAlignment="Center" Width="20" Kind="PlusCircleFill" Margin="0" HorizontalAlignment="Right"/>
                        </Grid>

                    </Button>
                </Grid>
                <Separator
    				Style="{StaticResource MaterialDesignLightSeparator}" Grid.ColumnSpan="2" Grid.Row="2" Height="1" />
                <Border BorderThickness="0,0,0,1" Background="#FFFBF2F2" Grid.Row="2" Grid.ColumnSpan="2" BorderBrush="#FFDADADA" Visibility="Collapsed"  />
                <Grid x:Name="EssentialControl" Margin="120,0,0,0" HorizontalAlignment="Left" Grid.Row="1" VerticalAlignment="Center" Grid.ColumnSpan="2">
                    <CheckBox
    					Style="{StaticResource MaterialDesignFilterChipPrimaryOutlineCheckBox}"
    					IsChecked="True"
    					Content="Active Notifications" Visibility="Collapsed" />
                    <ListBox
                   
    					Style="{StaticResource MaterialDesignFilterChipOutlineListBox}" HorizontalAlignment="Left">
                        <ListBoxItem x:Name="listBoxItem"
                        
    						Content="Active" ToolTip="Enable/Disable the watcher" IsSelected="True" />
                        <ListBoxItem
    						IsSelected="True"
    						Content="Notify" IsEnabled="{Binding IsSelected, ElementName=listBoxItem}" ToolTip="Enable/Disable Notifications" />

                    </ListBox>
                    <ToggleButton 
    					Style="{StaticResource MaterialDesignFlatToggleButton}"
                    
    					Content="{materialDesign:PackIcon Kind=Bell, Size=21}"
    					materialDesign:ToggleButtonAssist.OnContent="{materialDesign:PackIcon Kind=BellRingOutline, Size=21}"
    					ToolTip="MaterialDesignFlatToggleButton" HorizontalAlignment="Left" Margin="220,0,0,0"  Visibility="Collapsed" 
                    
                    />
                </Grid>
                <Button Style="{DynamicResource MaterialDesignFlatLightButton}" x:Name="TestButton" Content="TEST THREAD" Height="Auto" Margin="4,10,0,10" Grid.Column="1" HorizontalAlignment="Left"  Grid.Row="1" Click="TestButton_Click"/>
                <Button Style="{DynamicResource MaterialDesignFlatLightButton}" x:Name="profilerButt" Content="PROFILER" Height="Auto" Margin="140,10,0,10" Grid.Column="1" HorizontalAlignment="Left"  Grid.Row="1" Click="profilerButt_Click"/>
                <Grid x:Name="Body" Grid.ColumnSpan="2" Margin="5,5,5,10" Grid.Row="3" d:LayoutOverrides="Width">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Expander x:Name="expander" 
    					materialDesign:ExpanderAssist.HeaderFontSize="15" 
    					materialDesign:ColorZoneAssist.Mode="PrimaryLight"
    					BorderBrush="{DynamicResource MaterialDesignTextFieldBoxDisabledBackground}"
    					materialDesign:ExpanderAssist.HorizontalHeaderPadding="0" 
    					materialDesign:ExpanderAssist.VerticalHeaderPadding="0,10,0,0"
    					ExpandDirection="Right" HorizontalAlignment="Left" IsExpanded="True" BorderThickness="0,1,1,1">
                        <Expander.Header>
                            <Grid Height="1000" Background="#00000000">
                                <TextBlock Text="{Binding Items.Count, ElementName=WatchersList, Mode=OneWay, StringFormat=Watchers (\{0:D\})}"
    								RenderTransformOrigin=".5,.5" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,30,0,0" Background="#00000000" Style="{StaticResource MaterialDesignButtonTextBlock}">
                                    <TextBlock.LayoutTransform>
                                        <RotateTransform
    										Angle="90" />
                                    </TextBlock.LayoutTransform>
                                </TextBlock>
                            </Grid>
                        </Expander.Header>
                        <Border x:Name="watcher_win" Margin="0" BorderThickness="0" BorderBrush="{DynamicResource grayMi_HeaderBg}"  Width="261"  >
                            <Grid Margin="0" Background="#00000000">

                                <!--oldListBox x:Name="WatchersList"  Background="#00000000" Foreground="White" ItemTemplate="{DynamicResource DataTemplate2}" VerticalContentAlignment="Top" ItemContainerStyle="{DynamicResource ListBoxItemStyle1}" BorderThickness="0"  d:DataContext="{d:DesignData /SampleData/SessionSampleData.xaml}"  ItemsSource="{Binding Watchers}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" HorizontalContentAlignment="Stretch" Padding="0" Margin="0" Style="{DynamicResource ListBoxMiEdited}" PreviewKeyUp="listBox_PreviewKeyUp" ScrollViewer.CanContentScroll="False" SelectedIndex="2"/-->
                                <ListBox  x:Name="WatchersList" SelectedItem="{Binding SelectedWatcher, Mode=TwoWay}"  Background="Transparent" Foreground="White" VerticalContentAlignment="Top" SelectionChanged="WatchersList_SelectionChanged" ItemContainerStyle="{DynamicResource ListBoxItemStyle1}" BorderThickness="0"    ItemsSource="{Binding WatcherViewModels}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" HorizontalContentAlignment="Stretch" Padding="0" Margin="0"  PreviewKeyUp="listBox_PreviewKeyUp" ScrollViewer.CanContentScroll="False"  DragEnter="WatchersList_DragEnter" AllowDrop="True">

                                    <ListBox.ItemTemplate>
                                        <DataTemplate  DataType="{x:Type ViewModel:WatcherViewModel}" >
                                            <Views:WatcherView      />
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>

                                </ListBox>

                                <materialDesign:Card Background="{DynamicResource MaterialDesignToolBarBackground}" x:Name="NoWatchersCard"  Padding="8,12" UniformCornerRadius="6" Visibility="{Binding Items.Count, Converter={StaticResource visibleWhenZeroConverter}, ElementName=WatchersList, FallbackValue=Collapsed, Mode=OneWay}" VerticalAlignment="Top" Margin="0,20,0,0" HorizontalAlignment="Center">
                                    <TextBlock TextWrapping="Wrap" Text="(No Watcher loaded)" Style="{StaticResource MaterialDesignCaptionTextBlock}" Foreground="{DynamicResource MaterialDesignBodyLight}"  HorizontalAlignment="Center" VerticalAlignment="Center" />
                                </materialDesign:Card>
                                <Grid Height="44" VerticalAlignment="Bottom">
                                    <Button x:Name="AddWatcherFButt" Command="{Binding LoadWatcherFromFileCommand}" materialDesign:ShadowAssist.ShadowDepth="Depth3" HorizontalAlignment="Right" Margin="0 0 10 0" Style="{DynamicResource MaterialDesignFloatingActionMiniSecondaryButton}" RenderTransformOrigin="0.5,0.5" Visibility="Hidden" >
                                        <Button.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform/>
                                                <SkewTransform/>
                                                <RotateTransform/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Button.RenderTransform>
                                        <materialDesign:PackIcon Foreground="{DynamicResource MaterialDesignBody}" Kind="PlusBold"/>
                                    </Button>
                                </Grid>
                            </Grid>
                        </Border>

                    </Expander>
                    <Grid x:Name="newsSection" DataContext="{Binding NewsSectionViewModel}" Visibility="{Binding IsVisible, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}" Margin="0" Grid.Column="1">
                        <GroupBox
    						Style="{DynamicResource MaterialDesignGroupBox}"
    						materialDesign:ShadowAssist.ShadowDepth="Depth2"
    						BorderThickness="1"
    						Margin="4,0,0,0"
    						materialDesign:ColorZoneAssist.Mode="Custom" 
    						materialDesign:ColorZoneAssist.Background="{DynamicResource MaterialDesignTextFieldBoxDisabledBackground}" 
    						materialDesign:ColorZoneAssist.Foreground="{DynamicResource PrimaryHueMidBrush}" Padding="0,0,0,4" >
                            <GroupBox.Header>
                                <Grid x:Name="header" Margin="0" Background="#001A1A1D" d:LayoutOverrides="TopPosition, BottomPosition" Height="30">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="30"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock x:Name="textBlock20" HorizontalAlignment="Left" Margin="6,0,0,0" TextWrapping="Wrap" Text="{Binding HeaderText, FallbackValue=News}" VerticalAlignment="Center" Style="{StaticResource MaterialDesignBody1TextBlock}" Foreground="{DynamicResource MaterialDesignBody}" />
                                    <Custom:PackIconBootstrapIcons HorizontalAlignment="Stretch" Height="14" Margin="0" VerticalAlignment="Stretch" Width="14" Kind="ThreeDots" Grid.Column="1"/>
                                </Grid>
                            </GroupBox.Header>

                            <Grid  Margin="1,1,1,0" d:DataContext="{Binding}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <StackPanel x:Name="NoticesStack" Margin="0" Orientation="Vertical" d:LayoutOverrides="Height">
                                    <materialDesign:Card x:Name="noNewsCard"  Background="{DynamicResource MaterialDesignToolBarBackground}"  materialDesign:ShadowAssist.ShadowDepth="Depth2" HorizontalAlignment="Center"  Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}" Padding="8"  UniformCornerRadius="6" Width="220" d:LayoutOverrides="LeftPosition, RightPosition" Margin="0,10,0,0" Visibility="{Binding IsNoNewsCardVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <Grid x:Name="noNewsLabel2" Margin="0" VerticalAlignment="Center" HorizontalAlignment="Center" Height="48">
                                            <Grid.RowDefinitions>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="40"/>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock x:Name="lastcheCKEDInfo2" Grid.Column="1" Margin="10,4,0,0" TextWrapping="Wrap" Text="last checked: 1 min ago" Foreground="{DynamicResource MaterialDesignBodyLight}" Grid.Row="1" VerticalAlignment="Top" HorizontalAlignment="Left"/>
                                            <TextBlock x:Name="NoNewsLbl2" Grid.Column="1" Margin="10,0,0,2" TextWrapping="Wrap" Text="No news" Foreground="{DynamicResource MaterialDesignBody}" FontSize="16" VerticalAlignment="Bottom" HorizontalAlignment="Left"/>
                                            <Custom:PackIconBootstrapIcons HorizontalAlignment="Center" Height="32" Margin="5,7" VerticalAlignment="Center" Width="32" Foreground="{DynamicResource MaterialDesignBodyLight}" Kind="Check2All" Grid.RowSpan="2"/>
                                            <Button x:Name="showArchived1" HorizontalAlignment="Right" Margin="0,0,10,0" Style="{DynamicResource ButtonStyle1showArchived}" VerticalAlignment="Center" Grid.Column="1" Grid.RowSpan="2" Visibility="Collapsed">
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="0"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <TextBlock x:Name="textBlock2" TextWrapping="Wrap"  Foreground="{DynamicResource MaterialDesignBodyLight}" FontSize="13.333" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="8,4" Grid.Column="1"/>
                                                    <Custom:PackIconBootstrapIcons Height="18" VerticalAlignment="Center" Width="18" Foreground="{DynamicResource MaterialDesignBodyLight}" Kind="ArchiveFill" Margin="0" HorizontalAlignment="Center" Visibility="Collapsed"/>
                                                </Grid>
                                            </Button>
                                            <Custom:PackIconFontAwesome HorizontalAlignment="Center" Height="56" Margin="0" Grid.RowSpan="2" VerticalAlignment="Center" Width="56" Foreground="#FFC95D81" Kind="BroadcastTowerSolid" d:IsHidden="True" Visibility="Collapsed"/>
                                        </Grid>
                                    </materialDesign:Card>
                                    <materialDesign:Card x:Name="FailingErrorCard" Visibility="{Binding IsErrorCardVisible, Converter={StaticResource BooleanToVisibilityConverter}}" Background="{DynamicResource MaterialDesignToolBarBackground}"  materialDesign:ShadowAssist.ShadowDepth="Depth2" HorizontalAlignment="Center"  Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}" Padding="8"  UniformCornerRadius="6" Margin="0,10,0,0" MinWidth="220" MaxWidth="300">
                                        <Grid x:Name="errorwraper" Margin="0" VerticalAlignment="Center">
                                            <Grid.RowDefinitions>
                                                <RowDefinition/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="40"/>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock x:Name="ErrorTitle" Grid.Column="1" Margin="10,0,0,2" TextWrapping="Wrap" Text="{Binding FailingException.Message}" Foreground="{DynamicResource MaterialDesignBody}" FontSize="16" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                            <TextBlock x:Name="errorMessage" Grid.Column="1" Margin="10,4,0,0"   TextWrapping="Wrap" Foreground="{DynamicResource MaterialDesignBodyLight}" Grid.Row="1" VerticalAlignment="Top" HorizontalAlignment="Left" Text="{Binding FailingExceptionStackMessage}"/>
                                            <Custom:PackIconMaterial HorizontalAlignment="Center" Height="32" Margin="0,7,0,0" VerticalAlignment="Top" Width="32" Foreground="{DynamicResource MaterialDesignBodyLight}" Kind="Alert" Grid.RowSpan="2"/>
                                        </Grid>
                                    </materialDesign:Card>
                                    <materialDesign:Card x:Name="fatalErrorCard" Visibility="{Binding IsFatalErrorCardVisible, Converter={StaticResource BooleanToVisibilityConverter}}" Background="{DynamicResource MaterialDesignToolBarBackground}"  materialDesign:ShadowAssist.ShadowDepth="Depth2" HorizontalAlignment="Center"  Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}" Padding="8"  UniformCornerRadius="6" Margin="0,10,0,0">
                                        <Grid x:Name="errorwraper1" Margin="0" VerticalAlignment="Center">
                                            <Grid.RowDefinitions>
                                                <RowDefinition/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="40"/>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock x:Name="ErrorTitle1" Grid.Column="1" Margin="10,0,0,2" TextWrapping="Wrap" Text="{Binding FatalException.Message}" Foreground="{DynamicResource MaterialDesignBody}" FontSize="16" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                            <TextBlock x:Name="errorMessage1" Grid.Column="1" Margin="10,4,0,0" Text="{Binding FatalExceptionStackMessage}"  TextWrapping="Wrap" Foreground="{DynamicResource MaterialDesignBodyLight}" Grid.Row="1" VerticalAlignment="Top" HorizontalAlignment="Left" />
                                            <Custom:PackIconMaterial HorizontalAlignment="Center" Height="32" Margin="0,7,0,0" VerticalAlignment="Top" Width="32" Foreground="{DynamicResource MaterialDesignBodyLight}" Kind="CloseOctagon" Grid.RowSpan="2"/>
                                        </Grid>
                                    </materialDesign:Card>
                                </StackPanel>
                                <Grid x:Name="actualNews" Visibility="{Binding IsNewsListVisible, Converter={StaticResource BooleanToVisibilityConverter}}"  Margin="0" Grid.Row="1">
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <!--oldListBox x:Name="NewsList" Background="Transparent" Foreground="White" ItemTemplate="{DynamicResource Collection1ItemTemplate}" VerticalContentAlignment="Top" ItemContainerStyle="{DynamicResource ListBoxItemStyle2FORnEWS}" ItemsPanel="{DynamicResource ItemsPanelTemplate1}" BorderThickness="0" FocusVisualStyle="{DynamicResource ControlStyle1}" d:DataContext="{d:DesignData /SampleData/SelectedCustomLWSampleData.xaml}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" HorizontalContentAlignment="Stretch" Padding="0" Margin="0" ItemsSource="{Binding UnreadNews}" Style="{DynamicResource newsListTemplate}" DataContext="{Binding SelectedItem, ElementName=WatchersList}" Loaded="NewsList_Loaded" ScrollViewer.CanContentScroll="False"/-->
                                    <ListBox VirtualizingPanel.IsVirtualizing="True" VirtualizingPanel.VirtualizationMode="Recycling" x:Name="NewsList" Background="Transparent" Foreground="White"  ItemTemplate="{DynamicResource Collection1ItemTemplate}" VerticalContentAlignment="Top" ItemContainerStyle="{DynamicResource ListBoxItemStyle2FORnEWS}"  BorderThickness="0"   ScrollViewer.HorizontalScrollBarVisibility="Disabled" HorizontalContentAlignment="Stretch"   ItemsSource="{Binding NewsViewModels}"   ScrollViewer.CanContentScroll="False"/>

                                    <Grid x:Name="footer_Copy" Margin="0" Background="{DynamicResource MaterialDesignTextFieldBoxDisabledBackground}" Grid.Row="1" Height="38" Visibility="{Binding Items.Count, ConverterParameter=1, Converter={StaticResource visibleWhenGreaterThanConverter}, ElementName=NewsList, Mode=OneWay}">
                                        <StackPanel HorizontalAlignment="Right" Margin="0,0,10,0" Orientation="Horizontal">
                                            <Button materialDesign:ButtonAssist.CornerRadius="0"  Foreground="White" Style="{StaticResource MaterialDesignFlatButton}" Content="Download all" VerticalAlignment="Center" d:LayoutOverrides="TopPosition, BottomPosition" Margin="0,0,2,0" Height="Auto" />

                                            <Grid x:Name="primaryButton_Copy" VerticalAlignment="Center" Margin="0,16" Background="#00004878" d:IsHidden="True" Visibility="Collapsed">
                                                <TextBlock x:Name="textBlock11" Margin="8,4" TextWrapping="Wrap" Text="Download all" Foreground="White" FontSize="14.667" HorizontalAlignment="Center" VerticalAlignment="Center" TextOptions.TextFormattingMode="Ideal"/>
                                            </Grid>
                                            <Path Data="M427.375,3.1386719 L427.125,35.125266" Fill="#FFF4F4F5" Margin="2" Stretch="Fill" Stroke="#FF393942" UseLayoutRounding="False" Width="1" Height="26" VerticalAlignment="Center" d:LayoutOverrides="TopPosition, BottomPosition"/>

                                            <Button materialDesign:ButtonAssist.CornerRadius="0"  Foreground="White" Style="{StaticResource MaterialDesignFlatButton}" VerticalAlignment="Center"  ToolTip="MaterialDesignFlatButton" Content="Archive all" d:LayoutOverrides="TopPosition, BottomPosition" HorizontalAlignment="Right" Margin="2,0,0,0" Height="Auto" />
                                            <Grid x:Name="primaryButton_Copy5" VerticalAlignment="Center" Margin="0,16" Background="#00004878" Visibility="Collapsed">
                                                <TextBlock x:Name="textBlock15" Margin="8,4" TextWrapping="Wrap" Text="Archive all" Foreground="White" FontSize="14.667" HorizontalAlignment="Center" VerticalAlignment="Center" TextOptions.TextFormattingMode="Ideal"/>
                                            </Grid>

                                        </StackPanel>
                                        <Path x:Name="hrLine" Data="M427.375,8.896259 L425.77778,32.002766" Fill="#FFF4F4F5" Margin="0" Stretch="Fill" Stroke="#FF393942" UseLayoutRounding="False" Height="1" VerticalAlignment="Top"/>
                                    </Grid>
                                </Grid>

                            </Grid>
                        </GroupBox>
                    </Grid>
                </Grid>
                <Grid x:Name="brushesToy_Page" Margin="10" Grid.Row="3" Loaded="brushesToy_Loaded" Height="342" MinHeight="200" Grid.ColumnSpan="2" Background="{DynamicResource MaterialDesignPaper}" Visibility="Collapsed">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="457*"/>
                        <ColumnDefinition Width="336*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="58*"/>
                        <RowDefinition Height="39*"/>
                        <RowDefinition Height="103*"/>
                    </Grid.RowDefinitions>
                    <Grid x:Name="brushesToy_Panel" HorizontalAlignment="Right" Width="150" Margin="0,10,10,0" Height="80" VerticalAlignment="Top">
                        <Grid x:Name="BrushesToy_Body" Margin="0,0,10,0" HorizontalAlignment="Right" Width="40" Height="28" VerticalAlignment="Center"/>
                        <TextBlock x:Name="BrushesToy_Text" Margin="20,0,0,0" TextWrapping="Wrap" Text="Example" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                    </Grid>
                    <StackPanel Margin="6,10,10,0" VerticalAlignment="Top" HorizontalAlignment="Left" Width="220" Height="100" Grid.RowSpan="2">
                        <StackPanel d:LayoutOverrides="LeftPosition, RightPosition, TopPosition, BottomPosition">
                            <TextBlock x:Name="textBlock3" HorizontalAlignment="Left" TextWrapping="Wrap" Text="Page" d:LayoutOverrides="LeftPosition, RightPosition" VerticalAlignment="Top"/>
                            <ComboBox x:Name="BrushesToyPageCB" Margin="10,0,0,0" VerticalAlignment="Stretch" d:LayoutOverrides="LeftPosition, RightPosition, TopPosition, BottomPosition" HorizontalAlignment="Left" Width="200"/>
                        </StackPanel>
                        <StackPanel d:LayoutOverrides="LeftPosition, RightPosition">
                            <TextBlock x:Name="textBlock3_Copy" HorizontalAlignment="Left" TextWrapping="Wrap" Text="Panel" VerticalAlignment="Top" d:LayoutOverrides="TopMargin, BottomMargin, LeftPosition, RightPosition"/>
                            <ComboBox x:Name="BrushesToyPanelCB" VerticalAlignment="Top" Margin="10,0,0,0" d:LayoutOverrides="LeftPosition, RightPosition" HorizontalAlignment="Left" Width="200"/>
                        </StackPanel>
                        <StackPanel d:LayoutOverrides="LeftPosition, RightPosition">
                            <TextBlock x:Name="textBlock3_Copy1" HorizontalAlignment="Left" TextWrapping="Wrap" Text="Text" d:LayoutOverrides="LeftPosition, RightPosition" VerticalAlignment="Top"/>
                            <ComboBox x:Name="BrushesToyTextCB" Margin="10,0,0,0" VerticalAlignment="Top" d:LayoutOverrides="LeftPosition, RightPosition, TopPosition, BottomPosition" HorizontalAlignment="Left" Width="200"/>
                        </StackPanel>
                    </StackPanel>
                    <ScrollViewer   Margin="10" Style="{DynamicResource ScrollViewerStyle1}"  Grid.RowSpan="3" Grid.Column="1">
                        <StackPanel x:Name="elementsStack" VerticalAlignment="Top"/>
                    </ScrollViewer>
                    <ListBox x:Name="devStatsListBox" Margin="10,10,10,0" Grid.Row="2" VerticalAlignment="Top" MinHeight="60" Height="156"/>
                </Grid>
                <Grid x:Name="snackBarWraper" Height="44" Width="350" VerticalAlignment="Bottom" HorizontalAlignment="Left" Grid.Row="3" Grid.ColumnSpan="2" Margin="4,0,0,4">
                    <materialDesign:Snackbar materialDesign:SnackbarMessage.ContentMaxHeight="22"
                                         
    					materialDesign:ShadowAssist.ShadowDepth="Depth2"
    					x:Name="Snackbar" Background="{DynamicResource MaterialDesignToolBarBackground}" 
                                         
    					ActionButtonPlacement="Auto"
                                         
    					Foreground="{DynamicResource MaterialDesignBody}"
    					MessageQueue="{materialDesign:MessageQueue}" HorizontalAlignment="Left" MaxWidth="340" />

                </Grid>
                <Grid x:Name="ResizeHandle" Grid.Column="1" HorizontalAlignment="Right" Height="4" Margin="0" Grid.Row="3" VerticalAlignment="Bottom" Width="40" Background="#FF938989" MouseLeftButtonDown="ResizeHandle_MouseLeftButtonDown" Visibility="Hidden"/>






            </Grid>
            <Grid Background="{DynamicResource MaterialDesignFlatButtonClick}" Height="38" Margin="0" VerticalAlignment="Bottom" d:LayoutOverrides="Height" Grid.Row="1" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="109*"/>
                    <ColumnDefinition Width="70*"/>
                    <ColumnDefinition Width="120"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="46"/>
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Horizontal"  Grid.Column="2" Margin="2,0" VerticalAlignment="Center" HorizontalAlignment="Center">
                    <TextBlock Foreground="{DynamicResource MaterialDesignBodyLight}"  Text="Sort by" VerticalAlignment="Center"/>
                    <ComboBox x:Name="comboBox_Copy" VerticalAlignment="Center" SelectedIndex="1" d:LayoutOverrides="LeftPosition, RightPosition" HorizontalAlignment="Left" Margin="10,0,0,0">
                        <ComboBoxItem Content="Date"/>
                        <ComboBoxItem Content="Index"/>
                    </ComboBox>
                </StackPanel>
                <TextBox  x:Name="textBox" Grid.Column="3" Margin="2,0" Style="{DynamicResource MaterialDesignTextBox}"   TextWrapping="Wrap" VerticalAlignment="Center" BorderThickness="0,0,0,1" Width="80" Padding="0,4,20,4">
                    <materialDesign:HintAssist.Hint>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Search"/>
                        </StackPanel>
                    </materialDesign:HintAssist.Hint>
                    
                </TextBox>
                <Button x:Name="buttonss" materialDesign:ButtonAssist.CornerRadius="0" Style="{DynamicResource MaterialDesignIconForegroundButton}" Grid.Column="3" Height="24" VerticalAlignment="Center" HorizontalAlignment="Right" Width="24" Padding="2" Margin="0,0,2,0">
                    <Custom:PackIconMaterial Kind="Magnify" Margin="2,0,0,0" Width="14" Height="14"/>

                </Button>
                <Button x:Name="button" materialDesign:ButtonAssist.CornerRadius="0" Style="{DynamicResource MaterialDesignIconForegroundButton}" Grid.Column="4" Height="24" VerticalAlignment="Center" HorizontalAlignment="Center" Width="24" Padding="2">
                    <Custom:PackIconMaterialDesign  Kind="Menu" Width="18" Height="18" ></Custom:PackIconMaterialDesign>
                </Button>
            </Grid>
        </Grid>
    </Border>
</Window>
