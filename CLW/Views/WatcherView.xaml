<UserControl x:Class="CLW.Views.WatcherView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:CLW"
             xmlns:converters="clr-namespace:CLW.Converters"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:ViewModel="clr-namespace:CLW.ViewModel"
             xmlns:Custom="http://metro.mahapps.com/winfx/xaml/iconpacks" x:Name="userControl"
             d:DataContext="{x:Type ViewModel:WatcherViewModel}"
             mc:Ignorable="d" 
             d:DesignHeight="58" d:DesignWidth="261" UseLayoutRounding="True" Margin="0" Height="58" Padding="0">
    <UserControl.Resources>
        <materialDesign:NotZeroConverter x:Key="NotZeroConverter"/>
        <local:badgeZeroToNullReplacer x:Key="badgeZeroToNullReplacer"></local:badgeZeroToNullReplacer>
        <local:boolToVisibilityInverted x:Key="boolToVisibilityInverted"/>
        <converters:IntToVisibilityConverter x:Key="IntToVisibilityConverter"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <Storyboard x:Key="OnMouseEnter2"/>
        <Storyboard x:Key="OnMouseLeave2"/>
        <Storyboard x:Key="OnMouseLeftButtonDown1"/>
           </UserControl.Resources>
    <UserControl.ContextMenu>
        <ContextMenu>
            <MenuItem Header="Properties" Command="{Binding OpenPropertiesWindow }"></MenuItem>
        </ContextMenu>
    </UserControl.ContextMenu>
    <Grid d:LayoutOverrides="LeftPosition, RightPosition, TopPosition, BottomPosition" >
        <Grid.Style>
            <Style TargetType="Grid">
                <Setter Property="Background" Value="Transparent"></Setter>
                <Style.Triggers>
                   
                    <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="true">
                        <Setter Property="Background" Value="{DynamicResource MaterialDesignDivider}"></Setter>
                    </DataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=ListBoxItem}}" Value="True"/>

                            <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=ListBoxItem}}" Value="False"/>

                        </MultiDataTrigger.Conditions>
                        <Setter Property="Background" Value="{DynamicResource MaterialDesignCardBackground}"></Setter>

                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>
        </Grid.Style>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="54"/>
            <ColumnDefinition/>
            <ColumnDefinition Width="44"/>
        </Grid.ColumnDefinitions>
        <Grid x:Name="header" Grid.Column="1" Margin="0,0,0,2" VerticalAlignment="Bottom" HorizontalAlignment="Left">
            <TextBlock x:Name="TitleTB" Margin="0,0,0,-1" TextWrapping="Wrap" Text="{Binding Title, FallbackValue=TITLE}" VerticalAlignment="Center" FontSize="14.667" Foreground="{DynamicResource MaterialDesignBody}" d:LayoutOverrides="Width" TextOptions.TextFormattingMode="Display"/>
        </Grid>
        <materialDesign:Badged  Margin="6,0,0,0" Grid.RowSpan="2" HorizontalAlignment="Left" VerticalAlignment="Center" BadgeColorZoneMode="Dark" BadgeBackground="#FFEAEAEA" BadgeForeground="Black" Badge="{Binding UnreadCount, Converter={StaticResource badgeZeroToNullReplacer}, FallbackValue=0}" BadgePlacementMode="TopRight">
            <Grid x:Name="avatar" Width="32" Height="32" >
                <Border x:Name="altAvatar" BorderThickness="1" Margin="0" Background="{Binding AvatarBackground}" Visibility="{Binding HasAvatarImage, Converter={StaticResource boolToVisibilityInverted}}" Width="32" Height="32">
                    <TextBlock x:Name="letter" Margin="0" TextWrapping="Wrap" Text="{Binding AvatarLetter, FallbackValue=NA}" Foreground="White" FontSize="21.333" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                </Border>
                <Image x:Name="favicon" Margin="0" Width="32" Height="32" Source="{Binding AvatarImage}" HorizontalAlignment="Center" VerticalAlignment="Center" d:LayoutOverrides="LeftMargin, RightMargin, TopMargin, BottomMargin" Visibility="{Binding HasAvatarImage, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            </Grid>

        </materialDesign:Badged>
        <Grid x:Name="state_set" Grid.Column="1" HorizontalAlignment="Left" Margin="0" Grid.Row="1" VerticalAlignment="Top">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="20"/>
            </Grid.ColumnDefinitions>
            <TextBlock x:Name="state_lbl" Margin="0,0,4,0" TextWrapping="Wrap" Text="{Binding StatusMessage,  FallbackValue=running}" FontSize="13.333" Foreground="{DynamicResource MaterialDesignBodyLight}" ToolTip="{Binding FailingExceptionStackMessage}" FontStyle="Italic" TextOptions.TextFormattingMode="Display"/>
            <ProgressBar Visibility="{Binding IsSpinnerVisible, Converter={StaticResource BooleanToVisibilityConverter}}" IsIndeterminate="True"  Foreground="{DynamicResource PrimaryHueLightBrush}" Style="{DynamicResource MaterialDesignCircularProgressBar}" Width="16" Height="16" Grid.Column="1"></ProgressBar>

            <Custom:PackIconRemixIcon x:Name="connectingSpinner" HorizontalAlignment="Center" Height="12" Margin="0" VerticalAlignment="Center" Width="12" Foreground="{DynamicResource MaterialDesignBodyLight}" Kind="Loader3Fill" Spin="True" SpinDuration="2.5" Grid.Column="1" Visibility="Collapsed"/>
        </Grid>
        <ToggleButton Style="{StaticResource MaterialDesignSwitchToggleButton}"  Margin="0" ToolTip="MaterialDesignSwitchToggleButton with Custom Track Background"  Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.RowSpan="2" IsChecked="{Binding IsActive, Mode=TwoWay}"/>
        <Border x:Name="bar" CornerRadius="2 0 0 2" HorizontalAlignment="Left" Margin="0" Grid.RowSpan="2" Width="3" >
            <Border.Style >
                <Style TargetType="{x:Type Border}">
                    <Setter Property="Background" Value="Transparent"></Setter>
                    <Style.Triggers>

                        <DataTrigger  Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}}" Value="True">
                            <!--Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"></-->
                            <Setter Property="Background" Value="{DynamicResource MaterialDesignBodyLight}"></Setter>
                        </DataTrigger>

                    </Style.Triggers>
                </Style>

            </Border.Style>
        </Border>

    </Grid>
</UserControl>
