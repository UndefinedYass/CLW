<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CLW.Views"
        xmlns:attached="clr-namespace:CLW.Views.Attached"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:Custom="http://metro.mahapps.com/winfx/xaml/iconpacks" xmlns:ViewModel="clr-namespace:CLW.ViewModel" xmlns:CLW="clr-namespace:CLW" xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls" xmlns:Converters="clr-namespace:CLW.Converters" x:Class="CLW.Views.WatcherPropertiesWindow"
        x:Name="window" 
        TextOptions.TextFormattingMode="Display" 
        SnapsToDevicePixels="True" UseLayoutRounding="True" 
        Foreground="{DynamicResource MaterialDesignBody}" 
        Background="{DynamicResource MaterialDesignPaper}"
        mc:Ignorable="d"
    attached:WindowProperties.CloseOnCloseRequest="True"
    attached:WindowProperties.ViewModel="{Binding }"
        Title="WatcherPropertiesWindow" d:DataContext="{d:DesignInstance {x:Type ViewModel:WatcherPropertiesWindowViewModel}, IsDesignTimeCreatable=True}" ResizeMode="CanMinimize" WindowStartupLocation="CenterScreen" SizeToContent="Height" Width="415" d:DesignHeight="567" MinHeight="480">
    <Window.Resources>
        <Converters:NullableDateTimeToTimeSpan x:Key="NullableDateTimeToTimeSpan"/>
        <Converters:CollectionViewGroupToStringConverter x:Key="CollectionViewGroupToStringConverter"/>
        <DataTemplate x:Key="ConnectionHeaderTemplate" DataType="{x:Type ViewModel:Header}">
            <Grid  x:Name="grd" UseLayoutRounding="True" Grid.IsSharedSizeScope="True" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" SharedSizeGroup="Delete"/>
                    <ColumnDefinition Width="60" SharedSizeGroup="Value" />

                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="auto" />

                </Grid.ColumnDefinitions>
                <Button   Grid.Column="0" Command="{Binding DataContext.DeleteCookieOrHeaderCommand, ElementName=window}" CommandParameter="{Binding}"  Margin="0,0,4,0"  Style="{DynamicResource MaterialDesignFlatDarkButton}"  Padding="0" Width="16" Height="16" Foreground="#FFF0382F" ToolTip="Delete Header" >
                    <materialDesign:PackIcon Kind="Minus" Width="16" Height="16"/>
                </Button>
                <TextBox x:Name="tbkey"  Grid.Column="1" Text="{Binding Key, Mode=TwoWay}" Margin="0,4,4,4" Padding="2,0" VerticalAlignment="Center" ToolTip="Header key" MaxWidth="90"  />
                <TextBox x:Name="tbval"  Grid.Column="2" Text="{Binding Value, Mode=TwoWay}" Margin="4" Padding="2,0" VerticalAlignment="Center" ToolTip="Header value:"  />
                <CheckBox Margin="4,0"  Grid.Column="3" HorizontalAlignment="Center" IsChecked="{Binding IsEnabled, Mode=TwoWay}" ToolTip="Enable/Disable header"  />

            </Grid>

        </DataTemplate>
        <DataTemplate x:Key="CookieTemplate" DataType="{x:Type ViewModel:Cookie}">
            <Grid  x:Name="grd" UseLayoutRounding="True" Grid.IsSharedSizeScope="True" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" SharedSizeGroup="Delete"/>
                    <ColumnDefinition Width="120" SharedSizeGroup="Value" />

                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="auto" />

                </Grid.ColumnDefinitions>
                <Button   Grid.Column="0" Command="{Binding DataContext.DeleteCookieOrHeaderCommand, ElementName=window}" CommandParameter="{Binding}"  Margin="0,0,4,0"  Style="{DynamicResource MaterialDesignFlatDarkButton}"  Padding="0" Width="16" Height="16" Foreground="#FFF0382F" ToolTip="Delete Header" >
                    <materialDesign:PackIcon Kind="Minus" Width="16" Height="16"/>
                </Button>
                <TextBox x:Name="tbkey" Grid.Column="1" materialDesign:TextFieldAssist.SuffixText="="  Text="{Binding Key, Mode=TwoWay}" Margin="0,4,4,4" Padding="2,0" VerticalAlignment="Center" ToolTip="Header key" MaxWidth="120"  />
                <TextBox x:Name="tbval" Grid.Column="2" materialDesign:TextFieldAssist.SuffixText=";"  Text="{Binding Value, Mode=TwoWay}" Margin="4" Padding="2,0" VerticalAlignment="Center" ToolTip="Header value:"  />
                <CheckBox Margin="4,0"  Grid.Column="3" HorizontalAlignment="Center" IsChecked="{Binding IsEnabled, Mode=TwoWay}" ToolTip="Enable/Disable header"  />

            </Grid>

        </DataTemplate>
        <ViewModel:CookieOrHeaderDataTemplateSelector x:Key="CookieOrHeaderDataTemplateSelector"/>
        <CollectionViewSource  x:Key="CookiesAndHeadersSource"  Source="{Binding CookiesAndHeaders}" IsLiveGroupingRequested="True" >
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription PropertyName="Type" />
            </CollectionViewSource.GroupDescriptions>
        </CollectionViewSource>
        <CLW:visibleWhenGreaterThanConverter x:Key="visibleWhenGreaterThanConverter"/>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="251*"/>
            <ColumnDefinition Width="145*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <StackPanel x:Name="TOP_PANNEL" Grid.ColumnSpan="2" Margin="6,4" Orientation="Vertical" Grid.IsSharedSizeScope="True">
            <TextBlock Text="{Binding Name}" Margin="0,0,0,10" FontSize="14.667"/>
            <Grid VerticalAlignment="Center" Height="28">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="grp1"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <TextBlock Text="URI:" VerticalAlignment="Center"/>
                <TextBox Text="{Binding Uri, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" materialDesign:ValidationAssist.OnlyShowOnFocus="True" materialDesign:TextFieldAssist.RippleOnFocusEnabled="False" materialDesign:TextFieldAssist.DecorationVisibility="Collapsed" VerticalAlignment="Center" Margin="6,0,0,0" Grid.Column="1">
                    
                </TextBox>
            </Grid>
            <Grid Margin="0" Height="28">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="grp1"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="Referece path:" VerticalAlignment="Center"/>
                <TextBox Text="{Binding RefFilePath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" materialDesign:ValidationAssist.OnlyShowOnFocus="True" VerticalAlignment="Center" Margin="6,0,0,0" Grid.Column="1"/>
            </Grid>
        </StackPanel>
        <Grid Grid.ColumnSpan="2" Margin="6,0" Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="28"/>
                <RowDefinition Height="28"/>
                <RowDefinition Height="28"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="242*"/>
                <ColumnDefinition Width="155*"/>
            </Grid.ColumnDefinitions>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Center">
                <TextBlock Text="Title:" VerticalAlignment="Center" Width="50"/>
                <TextBox Text="{Binding Title}" VerticalAlignment="Center" Margin="10,0,0,0"/>
            </StackPanel>
            <StackPanel    Orientation="Horizontal" HorizontalAlignment="Left" Margin="0" Grid.Row="1" VerticalAlignment="Center">
                <TextBlock Text="Interval:" VerticalAlignment="Center" Width="50"/>
                <TextBox   Text="{Binding Interval, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=False, ValidatesOnDataErrors=True, ValidatesOnExceptions=False}" VerticalAlignment="Center" Margin="10,0,0,0" materialDesign:TextFieldAssist.LeadingIcon="Timer" materialDesign:TextFieldAssist.HasLeadingIcon="True" materialDesign:TextFieldAssist.LeadingIconSize="16" Visibility="Collapsed"/>
                <materialDesign:TimePicker materialDesign:ValidationAssist.OnlyShowOnFocus="True" materialDesign:ValidationAssist.PopupPlacement="Right"   Margin="10 0 0 0"  WithSeconds="True" Is24Hours="True" SelectedTime="{Binding Interval, Mode=TwoWay, ValidatesOnDataErrors=True, Converter={StaticResource NullableDateTimeToTimeSpan}}" IsInvalidTextAllowed="True" TextOptions.TextFormattingMode="Display" Width="64" ></materialDesign:TimePicker>
            </StackPanel>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="0" Grid.Row="2" VerticalAlignment="Center">
                <TextBlock Text="Color:" VerticalAlignment="Center" Width="50"/>
                <materialDesign:ColorPicker Margin="0,0,0,-125" Visibility="Collapsed" Width="130"/>
                <Grid Margin="10,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left">
                    <Popup StaysOpen="False" x:Name="colorPickerPOPUP">
                        <Grid Height="120" Width="100">
                            <materialDesign:ColorPicker Color="{Binding Color, Mode=TwoWay}"/>
                        </Grid>
                    </Popup>
                    <TextBox  FontFamily="Consolas" materialDesign:TextFieldAssist.TextBoxViewMargin="0 0 20 0"  Text="{Binding Color, Mode=TwoWay}" VerticalAlignment="Center" HorizontalAlignment="Left" />
                    <Custom:PackIconMaterial Kind="Circle" Foreground="{Binding ColorAsBrush, Mode=OneWay}" Width="14" Height="14" VerticalAlignment="Center" HorizontalAlignment="Right" Cursor="Hand" MouseUp="PackIconMaterial_MouseUp"/>
                </Grid>
                <Border BorderBrush="White" Margin="10,0,0,0" Width="25" Height="16" VerticalAlignment="Center" HorizontalAlignment="Left" BorderThickness="0" Background="Teal" Visibility="Collapsed"/>
            </StackPanel>
            <CheckBox Content="Auto Download" HorizontalAlignment="Left" IsEnabled="False" Visibility="Collapsed" Margin="0,31,0,-2" Grid.Row="2" />
            <CheckBox Content="Notification" Margin="0" Grid.Column="1" VerticalAlignment="Center" />
            <CheckBox Grid.Row="1" Content="Sound" Margin="0" Grid.Column="1" VerticalAlignment="Center" />
            <CheckBox Grid.Row="2" Content="Visible Content" IsChecked="True" IsEnabled="False" Margin="0" Grid.Column="1" VerticalAlignment="Center" />
        </Grid>
        <Grid x:Name="HEADERS_SECT" Margin="6,8,6,4" Grid.Row="2" Grid.ColumnSpan="2" Visibility="Collapsed">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <TextBlock Text="Headers" Margin="0,4"/>
            <ListBox attached:ListBoxProps.AddButtonCommand="{Binding AddHeaderCommand}" Grid.Row="1" Background="{DynamicResource MaterialDesignPaper}"  ItemsSource="{Binding Headers}" Grid.IsSharedSizeScope="True" AlternationCount="2" MaxHeight="100" VerticalContentAlignment="Stretch" VerticalAlignment="Top" >

                <ListBox.Template>
                    <ControlTemplate TargetType="{x:Type ListBox}" >
                        <Border Grid.IsSharedSizeScope="True" x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="1" SnapsToDevicePixels="True">
                            <Grid Grid.IsSharedSizeScope="True">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="22"/>
                                </Grid.RowDefinitions>

                                <ScrollViewer Grid.IsSharedSizeScope="True" Grid.Row="1" Focusable="False" Padding="{TemplateBinding Padding}">
                                    <ItemsPresenter Grid.IsSharedSizeScope="True" />
                                </ScrollViewer>
                                <Grid Grid.Row="2" >


                                    <Button Command="{Binding (attached:ListBoxProps.AddButtonCommand), RelativeSource={RelativeSource TemplatedParent}}" 
										Style="{DynamicResource MaterialDesignFlatDarkButton}" Foreground="{DynamicResource MaterialDesignBody}"  Padding="0" Width="16" Height="16" ToolTip="Add declaration" HorizontalAlignment="Left">
                                        <Custom:PackIconMaterialDesign  Width="14" Height="14"  Kind="Add"/>
                                    </Button>

                                </Grid>

                            </Grid>

                        </Border>

                    </ControlTemplate>
                </ListBox.Template>


                <ListBox.ItemContainerStyle >

                    <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource MaterialDesignListBoxItem}">
                        <Setter Property="Grid.IsSharedSizeScope" Value="True"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <Grid Background="{TemplateBinding Background}" Grid.IsSharedSizeScope="True">
                                        <ContentPresenter Grid.IsSharedSizeScope="True"/>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="ContentTemplate" Value="{StaticResource ConnectionHeaderTemplate}"/>
                        <Style.Triggers>
                            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                <Setter Property="Background" Value="{DynamicResource MaterialDesignFlatButtonClick}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>


                </ListBox.ItemContainerStyle>
            </ListBox>
        </Grid>
        <Grid x:Name="COOKIES_SECT" Margin="6,0,6,4" Grid.Row="3               " Grid.ColumnSpan="2" Visibility="Collapsed">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <TextBlock Text="Cookies" Margin="0,4"/>
            <ListBox attached:ListBoxProps.AddButtonCommand="{Binding AddCookieCommand}" Grid.Row="1" Background="{DynamicResource MaterialDesignPaper}"  ItemsSource="{Binding Cookies}" Grid.IsSharedSizeScope="True" AlternationCount="2" MaxHeight="100" VerticalContentAlignment="Stretch" VerticalAlignment="Top" >

                <ListBox.Template>
                    <ControlTemplate TargetType="{x:Type ListBox}" >
                        <Border Grid.IsSharedSizeScope="True" x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="1" SnapsToDevicePixels="True">
                            <Grid Grid.IsSharedSizeScope="True">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="22"/>
                                </Grid.RowDefinitions>

                                <ScrollViewer Grid.IsSharedSizeScope="True" Grid.Row="1" Focusable="False" Padding="{TemplateBinding Padding}">
                                    <ItemsPresenter Grid.IsSharedSizeScope="True" />
                                </ScrollViewer>
                                <Grid Grid.Row="2" >


                                    <Button Command="{Binding (attached:ListBoxProps.AddButtonCommand), RelativeSource={RelativeSource TemplatedParent}}" 
										Style="{DynamicResource MaterialDesignFlatDarkButton}" Foreground="{DynamicResource MaterialDesignBody}"  Padding="0" Width="16" Height="16" ToolTip="Add declaration" HorizontalAlignment="Left" Margin="0">
                                        <Custom:PackIconMaterialDesign  Kind="Add" Width="14" Height="14"/>
                                    </Button>

                                </Grid>

                            </Grid>

                        </Border>

                    </ControlTemplate>
                </ListBox.Template>


                <ListBox.ItemContainerStyle >

                    <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource MaterialDesignListBoxItem}">
                        <Setter Property="Grid.IsSharedSizeScope" Value="True"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <Grid Background="{TemplateBinding Background}" Grid.IsSharedSizeScope="True">
                                        <ContentPresenter Grid.IsSharedSizeScope="True"/>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="ContentTemplate" Value="{StaticResource CookieTemplate}"/>
                        <Style.Triggers>
                            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                <Setter Property="Background" Value="{DynamicResource MaterialDesignFlatButtonClick}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>


                </ListBox.ItemContainerStyle>
            </ListBox>
        </Grid>
        <Grid x:Name="CookiesAndHeaders" Margin="6,0,6,4" Grid.Row="2" Grid.ColumnSpan="2" Grid.RowSpan="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <TextBlock Text="Cookies &amp; Headers" Margin="0,4"/>
            <ListBox attached:ListBoxProps.ScrollToAddedItem="True"  Grid.Row="1" Background="{DynamicResource MaterialDesignPaper}"  ItemsSource="{Binding Source={StaticResource CookiesAndHeadersSource}}" Grid.IsSharedSizeScope="True" AlternationCount="2" MaxHeight="200" VerticalContentAlignment="Stretch" VerticalAlignment="Top" ScrollViewer.CanContentScroll="False" >
                <ListBox.GroupStyle>
                    <GroupStyle>
                        <GroupStyle.HeaderTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Converter={StaticResource CollectionViewGroupToStringConverter}, Mode=OneWay}"
									Background="{StaticResource MaterialDesignCardBackground}"  FontWeight="Bold"
									Padding="5,4" />
                            </DataTemplate>
                        </GroupStyle.HeaderTemplate>
                    </GroupStyle>
                </ListBox.GroupStyle>
                <ListBox.Template>
                    <ControlTemplate TargetType="{x:Type ListBox}" >
                        <Border Grid.IsSharedSizeScope="True" x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="1" SnapsToDevicePixels="True">
                            <Grid Grid.IsSharedSizeScope="True">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="auto"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="auto"/>
                                </Grid.RowDefinitions>

                                <ScrollViewer Grid.IsSharedSizeScope="True" Grid.Row="1" Focusable="False" Padding="{TemplateBinding Padding}">
                                    <ItemsPresenter Grid.IsSharedSizeScope="True" />
                                </ScrollViewer>
                                <Grid Grid.Row="2" >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto"></ColumnDefinition>
                                        <ColumnDefinition Width="auto"></ColumnDefinition>
                                    </Grid.ColumnDefinitions>


                                    <Button Command="{Binding AddCookieCommand}"  Style="{DynamicResource MaterialDesignFlatDarkButton}" Foreground="{DynamicResource MaterialDesignBody}"  Padding="6 4"  ToolTip="Add Cookie" HorizontalAlignment="Left" Margin="0">
                                        <StackPanel Orientation="Horizontal">
                                            <Custom:PackIconMaterialDesign VerticalAlignment="Center"  Kind="Add" Width="12" Height="12"/>
                                            <TextBlock Margin="2 0 0 0" VerticalAlignment="Center" Text="Cookie"/>
                                        </StackPanel>
                                    </Button>
                                    <Button materialDesign:ColorZoneAssist.Mode="Inverted" Margin="6 0 0 0" Grid.Column="1" Command="{Binding AddHeaderCommand}" Style="{DynamicResource MaterialDesignFlatDarkButton}" Foreground="{DynamicResource MaterialDesignBody}" Padding="6 4"  ToolTip="Add Header" HorizontalAlignment="Left" >
                                        <StackPanel Orientation="Horizontal">
                                            <Custom:PackIconMaterialDesign VerticalAlignment="Center"  Kind="Add" Width="12" Height="12"/>
                                            <TextBlock Margin="2 0 0 0" VerticalAlignment="Center" Text="Header"/>
                                        </StackPanel>
                                    </Button>


                                </Grid>

                            </Grid>

                        </Border>

                    </ControlTemplate>
                </ListBox.Template>


                <ListBox.ItemContainerStyle >

                    <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource MaterialDesignListBoxItem}">
                        <Setter Property="Grid.IsSharedSizeScope" Value="True"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <Grid Background="{TemplateBinding Background}" Grid.IsSharedSizeScope="True">
                                        <ContentPresenter Grid.IsSharedSizeScope="True"/>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="ContentTemplateSelector" Value="{StaticResource CookieOrHeaderDataTemplateSelector}" />
                        <Style.Triggers>
                            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                <Setter Property="Background" Value="{DynamicResource MaterialDesignFlatButtonClick}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>


                </ListBox.ItemContainerStyle>
            </ListBox>
        </Grid>
        <StackPanel x:Name="CONTROLS" Margin="0,4,6,6" Grid.Row="4                     " Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
            <Button Content="OK" VerticalAlignment="Center" Command="{Binding SaveCommand}" Style="{StaticResource MaterialDesignFlatButton}" Foreground="{StaticResource MaterialDesignBody}"/>
            <Button Content="Cancel" Command="{Binding CancelCommand}" Margin="6,0,0,0" VerticalAlignment="Center" Style="{StaticResource MaterialDesignFlatButton}" Foreground="{StaticResource MaterialDesignBody}"  />
        </StackPanel>
    </Grid>
</Window>
