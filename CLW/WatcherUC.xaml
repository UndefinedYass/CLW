<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:CLW"
          xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:Custom="http://metro.mahapps.com/winfx/xaml/iconpacks" x:Name="userControl" x:Class="CLW.WatcherUC"
             mc:Ignorable="d" 
             d:DesignHeight="58" d:DesignWidth="261" UseLayoutRounding="True" Margin="4,2" Height="58">
    <UserControl.Resources>
        <materialDesign:NotZeroConverter x:Key="NotZeroConverter"/>
        <local:badgeZeroToNullReplacer x:Key="badgeZeroToNullReplacer"></local:badgeZeroToNullReplacer>
        <local:boolToVisibilityInverted x:Key="boolToVisibilityInverted"/>
        <local:IntToVisibilityConverter x:Key="IntToVisibilityConverter"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <ControlTemplate x:Key="ToggleButtonControlTemplate1" TargetType="{x:Type ToggleButton}">
            <Grid x:Name="miToggle" HorizontalAlignment="Center" Margin="0" Width="24" Background="#00000000" Height="16" VerticalAlignment="Center" d:LayoutOverrides="LeftPosition, RightPosition, TopPosition, BottomPosition">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CheckStates">
                        <VisualStateGroup.Transitions>
                            <VisualTransition From="Unchecked" GeneratedDuration="0" To="Checked">
                                <Storyboard>
                                    <DoubleAnimation Duration="0:0:0.2" To="8" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="thumb"/>
                                    <ColorAnimation Duration="0:0:0.2" To="#FF35CB8E" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="thumb"/>
                                    <ColorAnimation Duration="0:0:0.2" To="#FF447460" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="tracker"/>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="thumb">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.9"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="thumb">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.9"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualTransition>
                            <VisualTransition From="Checked" GeneratedDuration="0" To="Unchecked">
                                <Storyboard>
                                    <DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="thumb"/>
                                    <ColorAnimation Duration="0:0:0.2" To="#FFD1D1D1" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="thumb"/>
                                    <ColorAnimation Duration="0:0:0.2" To="#FF767676" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="tracker"/>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="thumb">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.9"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="thumb">
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.9"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="1"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualTransition>
                        </VisualStateGroup.Transitions>
                        <VisualState x:Name="Checked">
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="thumb">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="8"/>
                                </DoubleAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="thumb">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF35CB8E"/>
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="tracker">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF447460"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unchecked"/>
                        <VisualState x:Name="Indeterminate">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" Storyboard.TargetName="thumb">
                                    <EasingColorKeyFrame KeyTime="0" Value="#FF35CB8E"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Grid Height="16" Margin="0" VerticalAlignment="Top" Width="24">
                    <Rectangle x:Name="tracker" Margin="0,3,0,0" Stroke="{x:Null}" RadiusY="5" RadiusX="5" StrokeThickness="1" Height="10" VerticalAlignment="Top" Fill="#FF767676" HorizontalAlignment="Stretch" Width="24"/>
                    <Ellipse x:Name="thumb" Height="16" Margin="0" Stroke="{x:Null}" StrokeThickness="0" VerticalAlignment="Center" Width="16" HorizontalAlignment="Left" Fill="#FFD1D1D1" RenderTransformOrigin="0.5,0.5">
                        <Ellipse.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <SkewTransform/>
                                <RotateTransform/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Ellipse.RenderTransform>
                    </Ellipse>
                </Grid>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True"/>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Storyboard x:Key="OnMouseEnter2"/>
        <Storyboard x:Key="OnMouseLeave2"/>
        <Storyboard x:Key="OnMouseLeftButtonDown1"/>
    </UserControl.Resources>
    <Grid d:LayoutOverrides="LeftPosition, RightPosition, TopPosition, BottomPosition" Background="{Binding Background, ElementName=userControl}">
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="54"/>
            <ColumnDefinition/>
            <ColumnDefinition Width="44"/>
        </Grid.ColumnDefinitions>
        <Grid x:Name="header" Grid.Column="1" Margin="0,0,0,2" VerticalAlignment="Bottom" HorizontalAlignment="Left">
            <TextBlock x:Name="textBlock7" Margin="0,0,0,-1" TextWrapping="Wrap" Text="{Binding Title, ElementName=userControl, FallbackValue=TITLE}" VerticalAlignment="Center" FontSize="14.667" Foreground="{DynamicResource MaterialDesignBody}" d:LayoutOverrides="Width" TextOptions.TextFormattingMode="Display"/>
        </Grid>
        <materialDesign:Badged  Margin="6,0,0,0" Grid.RowSpan="2" HorizontalAlignment="Left" VerticalAlignment="Center" BadgeColorZoneMode="Dark" BadgeBackground="#FFEAEAEA" BadgeForeground="Black" Badge="{Binding NewsCount, Converter={StaticResource badgeZeroToNullReplacer}, ElementName=userControl, FallbackValue=0}" BadgePlacementMode="TopRight">
            <Grid x:Name="avatar" Width="32" Height="32" >
                <Border x:Name="altAvatar" BorderThickness="1" Margin="0" Background="#FF9B0909" Visibility="{Binding CoreCustomListWatcher.HasFavicon, Converter={StaticResource boolToVisibilityInverted}, ElementName=userControl}" Width="32" Height="32">
                    <TextBlock x:Name="letter" Margin="0" TextWrapping="Wrap" Text="{Binding CoreCustomListWatcher.AlternativeAvatarLetter, ElementName=userControl, FallbackValue=NA, Mode=Default}" Foreground="White" FontSize="21.333" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                </Border>
                <Image x:Name="favicon" Margin="0" Width="32" Height="32" Source="{Binding CoreCustomListWatcher.IconSource, ElementName=userControl}" HorizontalAlignment="Center" VerticalAlignment="Center" d:LayoutOverrides="LeftMargin, RightMargin, TopMargin, BottomMargin" Visibility="{Binding CoreCustomListWatcher.HasFavicon, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=userControl}"/>
                <Border x:Name="small_info_Copy4" Margin="0,-12,-12,0" Background="White" CornerRadius="50" Width="20" HorizontalAlignment="Right" Height="20" VerticalAlignment="Top" Visibility="{Binding NewsCountrn, Converter={StaticResource IntToVisibilityConverter}, ElementName=userControl, FallbackValue=Collapsed}" d:IsHidden="True">
                    <TextBlock x:Name="newsCountLbl" TextWrapping="Wrap" Text="{Binding NewsCount, ElementName=userControl, FallbackValue=0}" TextOptions.TextFormattingMode="Display" VerticalAlignment="Center" HorizontalAlignment="Center" FontFamily="Tw Cen MT Condensed Extra Bold" Margin="0" Foreground="Black"/>
                </Border>
            </Grid>

        </materialDesign:Badged>
         <Grid x:Name="state_set" Grid.Column="1" HorizontalAlignment="Left" Margin="0" Grid.Row="1" VerticalAlignment="Top">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="20"/>
            </Grid.ColumnDefinitions>
            <TextBlock x:Name="state_lbl" Margin="0" TextWrapping="Wrap" Text="{Binding StateText, ElementName=userControl, FallbackValue=running}" FontSize="13.333" Foreground="{DynamicResource MaterialDesignBodyLight}" FontStyle="Italic" TextOptions.TextFormattingMode="Display"/>
            <Custom:PackIconRemixIcon x:Name="connectingSpinner" HorizontalAlignment="Center" Height="12" Margin="0" VerticalAlignment="Center" Width="12" Foreground="#FFB8FFAD" Kind="Loader3Fill" Spin="True" SpinDuration="2.5" Grid.Column="1" Visibility="{Binding ShowConnectingSpinner, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=userControl}"/>
        </Grid>
        <ToggleButton Style="{StaticResource MaterialDesignSwitchToggleButton}"  Margin="0" ToolTip="MaterialDesignSwitchToggleButton with Custom Track Background"  Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.RowSpan="2" Checked="toggle_Checked" Unchecked="toggle_Unchecked">
           
            
        </ToggleButton>
        <ToggleButton Visibility="Collapsed" x:Name="toggle" Content="ToggleButton" Margin="0" Template="{DynamicResource ToggleButtonControlTemplate1}" Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.RowSpan="2" Checked="toggle_Checked" Unchecked="toggle_Unchecked"/>
    </Grid>
</UserControl>
